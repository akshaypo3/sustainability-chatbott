name: Deploy to SAP AI Core

on:
  push:
    branches: [ "main" ]
    paths:
      - 'sap-deployment/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: ./sap-deployment
        push: true
        tags: ghcr.io/akshaypo3/sustainability-chatbott:light-cpu

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y curl jq

    - name: Deploy to SAP AI Core
      env:
        SAP_SERVICE_KEY: ${{ secrets.SAP_SERVICE_KEY }}
      run: |
        # Parse service key
        echo "$SAP_SERVICE_KEY" > service-key.json
        CLIENT_ID=$(jq -r '.clientid' service-key.json)
        CLIENT_SECRET=$(jq -r '.clientsecret' service-key.json)
        AUTH_URL=$(jq -r '.url' service-key.json)/oauth/token
        API_URL=$(jq -r '.serviceurls.AI_API_URL' service-key.json)
        
        # Get access token
        TOKEN=$(curl -s -X POST "$AUTH_URL" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "grant_type=client_credentials&client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET" \
          | jq -r '.access_token')
        
        # Deploy serving template
        curl -X POST "$API_URL/v2/lm/servingtemplates" \
          -H "Authorization: Bearer $TOKEN" \
          -H "Content-Type: multipart/form-data" \
          -F "file=@sap-deployment/serving.yaml"
        
        echo "Deployment request sent to SAP AI Core"